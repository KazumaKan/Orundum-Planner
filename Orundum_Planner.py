from datetime import datetime, timedelta

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏π‡πâ Limited
limited_banners = [
    {"name": "Summer", "start": (1, 15), "duration": 14},
    {"name": "Half Anniversary", "start": (4, 25), "duration": 14},
    {"name": "CN Banner", "start": (7, 25), "duration": 14},
    {"name": "Anniversary", "start": (10, 25), "duration": 14},
]

def calc_orundum(start_date: datetime, end_date: datetime):
    delta = end_date - start_date
    total_days = delta.days + 1

    orundum = 0
    tickets = 0
    rolls_from_free = 0

    for day_offset in range(total_days):
        current_day = start_date + timedelta(days=day_offset)

        # 2.1 ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô: 100 Orundum/‡∏ß‡∏±‡∏ô
        orundum += 100

        # 2.2 ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå: ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏û‡∏¥‡πà‡∏° 500 Orundum
        if current_day.weekday() == 0:  # Monday
            orundum += 500

        # 2.3 Annihilation ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ (‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 1800)
        if current_day.weekday() == 1:  # Tuesday
            orundum += 1800

        # 5. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: 600 Orundum + 4 ‡πÉ‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏π‡πâ
        if current_day.day == 1:
            orundum += 600
            tickets += 4

        # 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏π‡πâ Limited ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏´‡∏°
        for banner in limited_banners:
            banner_start = datetime(current_day.year, banner["start"][0], banner["start"][1])
            banner_end = banner_start + timedelta(days=banner["duration"] - 1)
            if banner_start <= current_day <= banner_end:
                if (banner_start == current_day):
                    rolls_from_free += 10  # 4.3 ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏ü‡∏£‡∏µ 10 ‡πÇ‡∏£‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏π‡πâ
                rolls_from_free += 1      # 4.2 ‡πÇ‡∏£‡∏•‡∏ü‡∏£‡∏µ‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 1 ‡πÇ‡∏£‡∏•
            elif current_day > banner_end and (current_day - banner_end).days == 1:
                rolls_from_free += 10     # 4.4 ‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡∏π‡πâ‡πÅ‡∏•‡πâ‡∏ß +10

    return orundum, tickets, rolls_from_free, total_days

if __name__ == "__main__":
    print("=== ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Orundum ‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ===")

    use_today = input("‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n) : ").strip().lower()

    if use_today == 'y':
        start_date = datetime.today()
    else:
        start_input = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: YYYY-MM-DD) : ").strip()
        try:
            start_date = datetime.strptime(start_input, "%Y-%m-%d")
        except ValueError:
            print("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏ó‡∏ô")
            start_date = datetime.today()

    end_input = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: YYYY-MM-DD): ").strip()
    try:
        end_date = datetime.strptime(end_input, "%Y-%m-%d")
    except ValueError:
        print("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÄ‡∏õ‡πá‡∏ô 31 ‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
        end_date = datetime(start_date.year, 12, 31)

    if end_date < start_date:
        print("‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏à‡∏∞‡∏™‡∏•‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        start_date, end_date = end_date, start_date

    # ‚úÖ ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Orundum ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πã‡∏ß‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    try:
        existing_orundum = int(input("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ Orundum ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà? : ").strip())
    except ValueError:
        existing_orundum = 0

    try:
        existing_tickets = int(input("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏π‡πâ‡∏Å‡∏µ‡πà‡πÉ‡∏ö? : ").strip())
    except ValueError:
        existing_tickets = 0

    orundum, tickets, rolls_from_free, total_days = calc_orundum(start_date, end_date)

    total_orundum = orundum + existing_orundum
    total_tickets = tickets + existing_tickets
    total_rolls = total_orundum // 600 + total_tickets + rolls_from_free

    print("\n=== ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ===")
    print(f"‡∏£‡∏ß‡∏°‡∏ß‡∏±‡∏ô : {total_days}")
    print(f"Orundum ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ : {orundum}")
    print(f"‡∏ï‡∏±‡πã‡∏ß‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ : {tickets}")
    print(f"‡πÇ‡∏£‡∏•‡∏ü‡∏£‡∏µ‡∏à‡∏≤‡∏Å‡∏ï‡∏π‡πâ Limited : {rolls_from_free}")
    print(f"Orundum ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà : {existing_orundum}")
    print(f"‡∏ï‡∏±‡πã‡∏ß‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà : {existing_tickets}")
    print(f"\nüëâ ‡∏£‡∏ß‡∏° Orundum ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î : {total_orundum}")
    print(f"üëâ ‡∏£‡∏ß‡∏°‡∏ï‡∏±‡πã‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î : {total_tickets}")
    print(f"üéØ ‡∏£‡∏ß‡∏°‡πÇ‡∏£‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ : {total_rolls} ‡πÇ‡∏£‡∏•")
    print("\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Orundum Planner!")